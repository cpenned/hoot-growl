---
import { getCollection } from "astro:content";
import BaseHead from "../../../components/BaseHead.astro";
import Header from "../../../components/Header.astro";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts = await getCollection("blog");

  const sortedPosts = allPosts.sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
  ); // Sort by pubDate descending

  // Ensure allPosts have defined categories
  const allCategories = [
    ...new Set(
      sortedPosts.flatMap((post) => post.data.campaign || []) // Default to an empty array if undefined
    ),
  ];

  return allCategories.flatMap((campaign) => {
    const filteredPosts = allPosts.filter(
      (post) => post.data.campaign && post.data.campaign.includes(campaign)
    );
    return paginate(filteredPosts, {
      params: { campaign },
      pageSize: 6,
    });
  });
}

interface BlogPostEntry {
  slug: string;
  data: {
    title: string;
    description: string;
    draft: boolean;
    pubDate: string; // or Date if you prefer to parse it beforehand
    campaign?: string;
    type?: string;
    prev?: string;
    next?: string;
    players?: string[];
    dm?: string;
    order?: number;
    series?: string;
  };
}

interface Props {
  page: {
    data: BlogPostEntry[];
    currentPage: number;
    url: {
      prev: string;
      next: string;
    };
  };
}

const { page }: { page: Props["page"] } = Astro.props;
const { params } = Astro;
---

<html lang="en">
  <head>
    <BaseHead
      title={params.campaign.toLowerCase().replace(/-/g, " ")}
      description={`Campaign archive for ${params.campaign.replace(/-/g, " ")}`}
    />
  </head>

  <body class="dark:bg-black-900 dark:text-white-50">
    <Header />
    <main>
      <h1 class="text-3xl p-5 capitalize">
        Campaign: {params.campaign.replace(/-/g, " ")}
      </h1>

      <h3 class="xl p-5">Page {page.currentPage}</h3>
      <div class="flex flex-row justify-around items-center box">
        <a href={page.url.prev} class="no-underline hover:text-secondary-900"
          ><div
            class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit"
          >
            ❮ Prev
          </div>
        </a>
        <a href={page.url.next} class="no-underline">
          <div class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit">
            Next ❯
          </div>
        </a>
      </div>
      <div class="grid-cols-12 grid text-balance" id="container">
        {
          page.data.map((blogPostEntry: BlogPostEntry) => (
            <>
              <div class="col-span-8 col-start-2 col-end-10">
                <div class="top-border">
                  <div class="flex flex-col lg:flex-row justify-between items-start gap-3">
                    <div class="flex flex-col gap-3">
                      <a href={`/${blogPostEntry.slug}`}>
                        {blogPostEntry.data.title}
                      </a>
                      <div class="text-black-950">
                        {blogPostEntry.data.description}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </>
          ))
        }
      </div>
      <div class="flex flex-row justify-around items-center box">
        <a href={page.url.prev} class="no-underline hover:text-secondary-900"
          ><div
            class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit"
          >
            ❮ Prev
          </div>
        </a>
        <a href={page.url.next} class="no-underline">
          <div class="lar p-3 bg-slate-200 rounded-xl text-black-900 max-w-fit">
            Next ❯
          </div>
        </a>
      </div>
    </main>

    <style>
      .top-border {
        border: 3px solid;
        border-image-slice: 1;
        border-width: 5px;
        border-image-source: linear-gradient(to right, #0d47a1, #f48fb1);
        border-left: 0;
        border-right: 0;
        border-bottom: 0;
        padding: 1em;
      }

      .box {
        margin-block: 1.5em;
      }
      .capitalize {
        text-transform: capitalize;
      }
    </style>
  </body>
</html>
